import random
import tkinter as tk
from tkinter import messagebox

# Function to determine the winner
def determine_winner(user_choice, computer_choice):
    if user_choice == computer_choice:
        return "It's a tie!"
    elif (user_choice == "rock" and computer_choice == "scissors") or \
         (user_choice == "scissors" and computer_choice == "paper") or \
         (user_choice == "paper" and computer_choice == "rock"):
        return "You win!"
    else:
        return "Computer wins!"

# Function to play the game
def play_game(user_choice):
    global user_score, computer_score
    computer_choice = random.choice(['rock', 'paper', 'scissors'])
    
    # Update choices in the GUI
    user_choice_label.config(text=f"Your choice: {user_choice.capitalize()}")
    computer_choice_label.config(text=f"Computer's choice: {computer_choice.capitalize()}")
    
    result = determine_winner(user_choice, computer_choice)
    
    # Display the result in the GUI
    result_label.config(text=f"Result: {result}")
    
    # Update the scores
    if result == "You win!":
        user_score += 1
    elif result == "Computer wins!":
        computer_score += 1

    # Update score labels
    user_score_label.config(text=f"Your Score: {user_score}")
    computer_score_label.config(text=f"Computer's Score: {computer_score}")

# Function to reset the game
def reset_game():
    global user_score, computer_score
    user_score = 0
    computer_score = 0
    user_score_label.config(text="Your Score: 0")
    computer_score_label.config(text="Computer's Score: 0")
    result_label.config(text="")
    user_choice_label.config(text="Your choice:")
    computer_choice_label.config(text="Computer's choice:")

# Function to exit the game
def exit_game():
    root.quit()

# Initialize the Tkinter window
root = tk.Tk()
root.title("Rock-Paper-Scissors Game")

# Initialize scores
user_score = 0
computer_score = 0

# Labels to display choices and results
user_choice_label = tk.Label(root, text="Your choice:", font=('Helvetica', 12))
user_choice_label.pack(pady=10)

computer_choice_label = tk.Label(root, text="Computer's choice:", font=('Helvetica', 12))
computer_choice_label.pack(pady=10)

result_label = tk.Label(root, text="", font=('Helvetica', 14))
result_label.pack(pady=20)

# Score labels
user_score_label = tk.Label(root, text="Your Score: 0", font=('Helvetica', 12))
user_score_label.pack(side=tk.LEFT, padx=20)

computer_score_label = tk.Label(root, text="Computer's Score: 0", font=('Helvetica', 12))
computer_score_label.pack(side=tk.RIGHT, padx=20)

# Buttons for user input
rock_button = tk.Button(root, text="Rock", width=10, command=lambda: play_game("rock"))
rock_button.pack(pady=5)

paper_button = tk.Button(root, text="Paper", width=10, command=lambda: play_game("paper"))
paper_button.pack(pady=5)

scissors_button = tk.Button(root, text="Scissors", width=10, command=lambda: play_game("scissors"))
scissors_button.pack(pady=5)

# Buttons for resetting and exiting the game
reset_button = tk.Button(root, text="Reset Game", width=10, command=reset_game)
reset_button.pack(pady=20)

exit_button = tk.Button(root, text="Exit", width=10, command=exit_game)
exit_button.pack(pady=10)

# Run the GUI event loop
root.mainloop()
